name: CI

on:
  pull_request:
    branches: [main]

jobs:
  biome:
    name: Biome Check
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest

      - name: Run Biome
        run: biome ci .

  prisma-validate:
    name: Prisma Validation
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - name: Setup Node.js with pnpm
        uses: ./.github/actions/setup

      - name: Validate Prisma schema
        run: pnpm prisma validate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: GitGuardian Scan
        uses: GitGuardian/ggshield/actions/secret@v1.43.0
        env:
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [biome, prisma-validate]

    steps:
      - name: Setup Node.js with pnpm
        uses: ./.github/actions/setup

      - name: Build application
        run: pnpm run build
