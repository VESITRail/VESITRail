model Student {
  dateOfBirth        DateTime
  gender             Gender
  admissionYear      Int
  graduationYear     Int
  verificationDocUrl String
  approvalStatus     ApprovalStatus
  approvedAt         DateTime

  isDeleted  Boolean
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  updatedBy  String
  approvedBy String

  addressLine String
  area        String
  pincode     Int

  userId                String                  @unique
  user                  User                    @relation(fields: [userId], references: [id], onDelete: Cascade)
  classId               String
  class                 Class                   @relation(fields: [classId], references: [id])
  ConcessionApplication ConcessionApplication[]
}

model Class {
  id      String @id @default(uuid())
  code    String
  section String

  isActive    Boolean
  isDeleted   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedById String?
  updatedBy   User?    @relation(fields: [updatedById], references: [id])

  students Student[]
  branchId String
  branch   Branch    @relation(fields: [branchId], references: [id])
  yearId   String
  year     Year      @relation(fields: [yearId], references: [id])
}

model Branch {
  id   String @id @default(uuid())
  name String
  code String

  isActive    Boolean
  isDeleted   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedById String?
  updatedBy   User?    @relation(fields: [updatedById], references: [id])

  classes Class[]
}

model Year {
  id           String @id @default(uuid())
  name         String
  academicYear Int

  isActive    Boolean
  isDeleted   Boolean
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  updatedById String?
  updatedBy   User?    @relation(fields: [updatedById], references: [id])

  classes Class[]
}
